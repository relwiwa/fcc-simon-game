
/* Colors */

$borderColor:							#333;
$backgroundColor:					#333;
$centerColor:							white;

$topLeftColor:						seagreen;
$topLeftActiveColor:			aquamarine;
$topRightColor:						firebrick;
$topRightActiveColor:			lightcoral;
$bottomLeftColor:					gold;
$bottomLeftActiveColor:		lightyellow;
$bottomRightColor:				dodgerblue;
$bottomRightActiveColor:	paleturquoise;

$startButtonColor:				red;
$strictModeIndicatorColor:red;
$strictModeButtonColor:		yellow;
$switchPaddleColor:				#1779ba;

/* Mixins */

/* setup-simon Mixin:
	- Creates all the repetitive classes for the four fields of game
	- border and border-radius are set as defined by $vertical/$horizontal
	- colors are set for both states
	- animation is created for each field
	- static tapped class is also created */
@mixin setup-simon($vertical, $horizontal, $color, $colorActive) {
	
	#simon-#{$vertical}-#{$horizontal} {
		@if $vertical == "top" {
			padding-bottom: 2.5px;
			@media screen and (min-width: 25em) {
				padding-bottom: 5px;
			}
		}
		@else {
			padding-top: 2.5px;
			@media screen and (min-width: 25em) {
				padding-top: 5px;
			}			
		}

		@if $horizontal == "left" {
			padding-right: 2.5px;
			@media screen and (min-width: 25em) {
				padding-right: 5px;
			}
		}
		@else {
			padding-left: 2.5px;
			@media screen and (min-width: 25em) {
				padding-left: 5px;
			}
		}

	}

	#simon-#{$vertical}-#{$horizontal} div {
		border-#{$vertical}-#{$horizontal}-radius: 100%;
		background: $color;
		border-#{$vertical}: 4% solid $borderColor;
		border-#{$horizontal}: 4% solid $borderColor;
	}

	#simon-#{$vertical}-#{$horizontal} div.simon-field-current {
		animation-name:activate-#{$vertical}-#{$horizontal};
		animation-duration:900ms;
		background-color:$colorActive;
	}

	@keyframes activate-#{$vertical}-#{$horizontal} {
		0% { background-color:$color; }
		50% { background-color:$colorActive; }
		100% { background-color:$color; }
	}

}

/**********************************************/

@include setup-simon("top", "left", $topLeftColor, $topLeftActiveColor);
@include setup-simon("top", "right", $topRightColor, $topRightActiveColor);
@include setup-simon("bottom", "left", $bottomLeftColor, $bottomLeftActiveColor);
@include setup-simon("bottom", "right", $bottomRightColor, $bottomRightActiveColor);

.simon-game {
  max-width:700px;
  text-align:center;
  margin:0 auto;
}

.simon-board {
	border-radius:100%;
	position:relative;
}

.simon-fields {
	border:10px solid $borderColor;
	background:$borderColor;
	border-radius:100%;
	z-index:0;
	@media screen and (min-width: 25em) and (max-width: 34.313em) {
		border:15px solid $borderColor;
	}
	@media screen and (min-width: 34.375em) {
		border:20px solid $borderColor;		
	}
}

.simon-field {
	padding-right:0;
	padding-left:0;
	box-sizing:border-box;
}

.simon-field div {
	width:100%;
	padding-bottom:100%;
}

// SIMON CONTROLS CHAOS BELOW :-)

.simon-controls {
	position:absolute;
	z-index:5;
	background:$centerColor;
	border-radius:100%;
	top:15%;
	left:20.6%;
	@media screen and (min-width: 25em) and (max-width: 34.313em) {
		top:15%;
		left:20.6%;
	}
	@media screen and (min-width: 34.375em) and (max-width: 39.938em) {
		top:15%;
		left:20.6%;
	}
	@media screen and (min-width: 40em) and (max-width: 63.938em) {
		top:20%;
		left:25%;
	}
	@media screen and (min-width: 64em) {
		top:25%;
		left:20.6%;
	}
}

.simon-controls  > .row {
	background:$backgroundColor;
	border-radius:100%;
}

.simon-controls-text {
	font-size:0.5rem;
	font-weight:bold;
	text-transform:uppercase;
	margin-top:0.3rem;
	@media screen and (min-width: 25em) {
		font-size:0.6rem;
	}
}

.simon-controls-wrapper-1 {
  border-radius:100%;
  padding:0;
	border:5px solid $borderColor;
	@media screen and (min-width: 25em) {
	  border:10px solid $borderColor;
	}
}

.simon-controls-wrapper-2 {
	position:relative;
	padding-bottom:100%;
	background:$centerColor;
	border-radius:100%;
	text-align:center;

}

.simon-controls-top, .simon-controls-middle, .simon-controls-bottom {
	position:absolute;
	text-align:center;
	width:100%;
}

.simon-controls-top {
	margin-top:10%;
	margin-left:15%;
	margin-right:15%;
	width:70%;
	h3 {
		font-size:1.9rem;
		font-weight:bold;
		@media screen and (min-width: 34.375em) {
			font-size:2.4rem;
		}
	}
}

.simon-controls-middle {
  position:absolute;
  margin-top:30%;
  width:100%;
	line-height:0;
	@media screen and (min-width: 34.375em) {
		margin-top:35%;
	}
	button {
		position:relative;
		border-radius:100%;
		width:1.5rem;
		padding-bottom:1.5rem;
		border:4px solid $borderColor;
		box-sizing:content-box;
		outline:none;
		@media screen and (min-width: 25em) {
			width:2rem;
			padding-bottom:2rem;
		}
	}
	button.step-counter-button {
		width:2.5rem;
		border-radius:0;
		border:none;
		span {
			position:absolute;
			border-radius:0.2rem;
			left:0;
			top:-2px;
			padding:0.2rem 0;
			width:100%;
			height:100%;
			background:$backgroundColor;
			color:white;
			font-size:1.5rem;
			@media screen and (min-width: 25em) {
				font-size:2rem;
				padding:0.2rem;
			}
		}
	}
}

.simon-controls-middle-1 {
	height:10%;
}

.simon-controls-middle-2 {
	margin:0.2rem 0 0.4rem 0;
}


.re-start-button {
	background:$startButtonColor;
}

.strict-mode-indicator {
	height:1rem;

	span {
		display:inline-block;
		width:1rem;
		height:1rem;
		border:3px solid $borderColor;
		border-radius:100%;
		background:$borderColor;
	}
	span.strict-mode-on {
		background:$strictModeIndicatorColor;
	}
}

.strict-mode-toggle {
	background:$strictModeButtonColor;
}

.simon-controls-bottom {
  margin-top:75%;
	height:15%;
	width:50%;
	margin-left:25%;
	margin-right:25%;
}

.simon-controls-bottom input:checked ~ .switch-paddle {
	background:$backgroundColor;
}

.simon-controls-bottom .switch-paddle:after {
	border-radius:0.1rem;
	background:$switchPaddleColor;
}

.simon-controls-bottom .switch-paddle {
	background:$backgroundColor;
	border-radius:0.1rem;
}

.simon-controls-bottom .switch-active {
	background:$backgroundColor;
}
.simon-controls-bottom .switch-inactive {
	background:$backgroundColor;
}
